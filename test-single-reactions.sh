#!/bin/bash

# Test Script: Single Reaction Per User Per Message

echo "🧪 Testing Single Reaction Per User Feature"
echo "============================================"

echo ""
echo "📋 Test Instructions:"
echo "1. Start your backend server: cd backend && go run main.go"
echo "2. Start your frontend: cd frontend && npm run dev"
echo "3. Open two browser windows/tabs with different users"
echo "4. Follow the test steps below"

echo ""
echo "🔧 Test Steps:"
echo ""

echo "Step 1: Send Test Messages"
echo "-------------------------"
echo "User A: Send 'Message 1: Test single reactions on this!'"
echo "User B: Send 'Message 2: Try switching reactions!'"

echo ""
echo "Step 2: Test Single Reaction Constraint"
echo "---------------------------------------"
echo "User A: Add 👍 reaction to Message 2"
echo "✅ Verify User B sees 👍 reaction immediately"
echo ""
echo "User A: Now add ❤️ reaction to the SAME Message 2"
echo "✅ Expected: 👍 should disappear and only ❤️ should show"
echo "✅ Verify smooth animation transition (fade out 👍, fade in ❤️)"
echo "✅ Verify User B sees ONLY ❤️ reaction (no 👍)"

echo ""
echo "Step 3: Test Multiple Users, Single Reactions Each"
echo "--------------------------------------------------"
echo "User B: Add 😂 reaction to Message 1"
echo "User A: Add 🎉 reaction to Message 1"
echo "✅ Expected: Message 1 shows both 😂(1) and 🎉(1)"
echo "✅ Each user should see their own reaction highlighted"

echo ""
echo "Step 4: Test Reaction Switching"
echo "-------------------------------"
echo "User B: Switch from 😂 to 👍 on Message 1"
echo "✅ Expected: User B's 😂 disappears, 👍 appears"
echo "✅ User A's 🎉 remains unchanged"
echo "✅ Final state: 👍(1) 🎉(1)"

echo ""
echo "Step 5: Test Reaction Removal"
echo "-----------------------------"
echo "User A: Click their own 🎉 reaction to remove it"
echo "✅ Expected: 🎉 disappears completely"
echo "✅ Only User B's 👍(1) remains"

echo ""
echo "Step 6: Test Quick Reaction Bar"
echo "-------------------------------"
echo "Hover over Message 1 to show quick reaction bar"
echo "User A: Click 👍 in quick reaction bar"
echo "✅ Expected: User B's 👍 stays, User A gets their own 👍"
echo "✅ Display shows: 👍(2)"
echo ""
echo "User A: Click ❤️ in quick reaction bar"
echo "✅ Expected: User A's 👍 switches to ❤️"
echo "✅ Display shows: 👍(1) ❤️(1)"

echo ""
echo "Step 7: Test Page Refresh Persistence"
echo "-------------------------------------"
echo "Both users: Refresh the page (F5)"
echo "✅ Verify reactions persist after refresh"
echo "✅ Verify each user's reaction is still highlighted correctly"

echo ""
echo "✅ Expected Behaviors:"
echo "---------------------"
echo "• One reaction per user per message (enforced)"
echo "• Smooth animations when switching reactions"
echo "• Real-time updates across all users"
echo "• Current user's reaction is highlighted (blue)"
echo "• Quick reaction bar shows current selection"
echo "• Reaction counts are always accurate"
echo "• Reactions persist after page refresh"

echo ""
echo "🎨 Visual Indicators:"
echo "--------------------"
echo "• Current user's reaction: Blue background, blue border"
echo "• Other reactions: Gray background, gray border"
echo "• Hover effects: Scale animation, brighter colors"
echo "• Transition animations: Smooth fade in/out"
echo "• Quick bar selection: Blue background for current reaction"

echo ""
echo "❌ What Should NOT Happen:"
echo "-------------------------"
echo "• User having multiple reactions on same message"
echo "• Reaction counts being incorrect"
echo "• Multiple users losing reactions when one user changes"
echo "• Reactions appearing/disappearing without user action"
echo "• Broken animations or flickering"

echo ""
echo "🔍 Debugging Checks:"
echo "-------------------"
echo "Frontend Console:"
echo "• Look for 'Error handling reaction:' messages"
echo "• Check WebSocket 'reaction' event logs"
echo "• Verify no duplicate reaction API calls"
echo ""
echo "Backend Console:"
echo "• Should see 'remove' then 'add' events when switching"
echo "• No errors in SetUserReaction function"
echo "• Proper room-based broadcasting"
echo ""
echo "Network Tab:"
echo "• POST /message/reaction/add calls should return 200"
echo "• POST /message/reaction/remove calls should return 200"

echo ""
echo "🎯 Success Criteria:"
echo "-------------------"
echo "✅ Only one reaction per user per message"
echo "✅ Smooth transition animations when switching"
echo "✅ Real-time synchronization across users"
echo "✅ Accurate reaction counts at all times"
echo "✅ Visual highlighting of current user's reaction"
echo "✅ Persistent state after page refreshes"
echo "✅ Intuitive UX for reaction switching"

echo ""
echo "🚀 Advanced Test Cases:"
echo "----------------------"
echo "1. Rapid Reaction Switching:"
echo "   - Quickly switch between multiple reactions"
echo "   - Verify no race conditions or state corruption"
echo ""
echo "2. Network Issues:"
echo "   - Add reaction, disconnect network, reconnect"
echo "   - Verify state synchronization on reconnection"
echo ""
echo "3. Multiple Tabs:"
echo "   - Open same user in multiple tabs"
echo "   - Change reaction in one tab"
echo "   - Verify other tabs update immediately"

echo ""
echo "Ready to test single reactions! 🎬"
