#!/bin/bash

echo "🔄 REACTION PERSISTENCE TEST"
echo "=========================="
echo ""
echo "This test verifies that reactions persist correctly after page refresh"
echo "and that current user's reactions are properly highlighted."
echo ""

echo "📋 SETUP:"
echo "1. Make sure backend is running: cd backend && go run main.go"
echo "2. Make sure frontend is running: cd frontend && npm run dev"
echo "3. Open TWO different browser tabs with different users"
echo ""

echo "🧪 TEST STEPS:"
echo ""

echo "Step 1: Initial Reaction Test"
echo "----------------------------"
echo "User A: Login and go to a chat room"
echo "User B: Login and go to the SAME chat room"
echo "User A: Send a message: 'Testing reaction persistence'"
echo "User B: Add 👍 reaction to User A's message"
echo "User A: Add ❤️ reaction to the SAME message"
echo ""
echo "✅ Expected Results:"
echo "   - User A sees: 👍(1) ❤️(1) with ❤️ highlighted in blue"
echo "   - User B sees: 👍(1) ❤️(1) with 👍 highlighted in blue"
echo ""

echo "Step 2: Page Refresh Test"
echo "------------------------"
echo "Both Users: Press F5 to refresh the page"
echo "Wait for page to fully load"
echo ""
echo "✅ Expected Results After Refresh:"
echo "   - User A still sees: 👍(1) ❤️(1) with ❤️ highlighted in blue"
echo "   - User B still sees: 👍(1) ❤️(1) with 👍 highlighted in blue"
echo "   - Reaction counts remain accurate"
echo "   - Correct reactions are highlighted for each user"
echo ""

echo "Step 3: Reaction Switching Test"
echo "------------------------------"
echo "User A: Switch from ❤️ to 😂 on the same message"
echo ""
echo "✅ Expected Results:"
echo "   - User A sees: 👍(1) 😂(1) with 😂 highlighted in blue"
echo "   - User B sees: 👍(1) 😂(1) with 👍 highlighted in blue"
echo "   - ❤️ should be completely gone"
echo ""

echo "Step 4: Final Refresh Test"
echo "-------------------------"
echo "Both Users: Refresh page again (F5)"
echo ""
echo "✅ Expected Results:"
echo "   - User A sees: 👍(1) 😂(1) with 😂 highlighted in blue"
echo "   - User B sees: 👍(1) 😂(1) with 👍 highlighted in blue"
echo "   - Changes persist correctly"
echo ""

echo "🔍 DEBUGGING STEPS:"
echo "=================="
echo ""
echo "If reactions are not highlighting correctly after refresh:"
echo ""

echo "1. Open Browser Console (F12) and check for:"
echo "   ✅ No errors in console"
echo "   ✅ Message objects have correct reaction structure"
echo "   ✅ currentUserId is being passed correctly"
echo ""

echo "2. Test this in console:"
echo "   // Check current user ID"
echo "   console.log('Current User:', user?.id, 'as string:', user?.id?.toString());"
echo ""
echo "   // Check message reactions"
echo "   console.log('Message reactions:', allMessages.map(m => ({ id: m.id, reactions: m.reactions })));"
echo ""

echo "3. Database Check:"
echo "   curl 'http://localhost:8080/messages?room_id=YOUR_ROOM_ID'"
echo "   Look for reactions field in the response"
echo ""

echo "4. Expected Database Structure:"
echo "   \"reactions\": {"
echo "     \"👍\": [\"USER_B_ID\"],"
echo "     \"😂\": [\"USER_A_ID\"]"
echo "   }"
echo ""

echo "❌ COMMON ISSUES & FIXES:"
echo "========================"
echo ""
echo "Issue 1: Reactions show but not highlighted"
echo "Fix: Check if user ID types match (string vs number)"
echo ""
echo "Issue 2: Wrong user's reaction highlighted"
echo "Fix: Verify currentUserId is passed correctly to MessageBubble"
echo ""
echo "Issue 3: Reactions disappear after refresh"
echo "Fix: Check database persistence and API response format"
echo ""
echo "Issue 4: Multiple reactions per user"
echo "Fix: Verify SetUserReaction backend function removes previous reactions"
echo ""

echo "🎯 SUCCESS CRITERIA:"
echo "===================="
echo "✅ Reactions persist after page refresh"
echo "✅ Correct reactions highlighted for each user"
echo "✅ Only one reaction per user per message"
echo "✅ Real-time updates work across users"
echo "✅ Accurate reaction counts"
echo "✅ No console errors"
echo ""

echo "🚀 Ready to test reaction persistence!"
echo ""
echo "💡 TIP: If issues persist, check the data types in browser console:"
echo "console.log('User ID type:', typeof user?.id, 'Value:', user?.id);"
echo "console.log('Reaction user IDs:', Object.values(message.reactions).flat());"
